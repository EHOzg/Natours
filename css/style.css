/* 
COLORS:

Light green: #7ed56f
Mwdium green: #55c57a
Dark green: #28b485

*/

* {
    margin: 0;
    padding: 0;
    /* 继承下去 也方便后续修改 */
    box-sizing: inherit;
}

html  {
    /* 1rem = 10px */
    /* 16 * 0.625 = 10 */
    /* 这样设置 是为了当用户放大浏览器字体时 我们的字体也能跟随放大 */
    font-size: 62.5%;
}

body {
    font-family: "Lato", sans-serif;
    font-weight: 40rem;
    /* font-size: 16px; */
    line-height: 1.7;
    color: #777;
    padding: 3rem;
    box-sizing: border-box;
}

.header {
    height: 95vh;

    /* 从左上向右下渐变 */
    background-image:linear-gradient(
        to right bottom,
        rgba(126, 213, 111, 0.8), 
        rgba(40, 180, 133, 0.8)), 
    url(../img/hero.jpg);
    background-size: cover;
    background-position: top;

    /* 作为logo-box的参照对象 */
    position: relative;

    /* 利用多边形函数裁剪图片，得到个顶点的座标位置，顺时针设置 */
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
}

.logo {
    height: 3.5rem;
}

.heading-primary {
    color: #fff;
    text-transform: uppercase;

    /* 以前的浏览器动画效果会有抖动，现在没了 */
    /* backface-visibility: hidden; */
    margin-bottom: 6rem;
}

.text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    /* transform针对自身做改变 */
    /* 向左侧移动自身一半宽度， 向上移动自身一半宽度， 这样盒子本身就来到了页面的中间位置 */
    transform: translate(-50%, -50%);
    /* 控制按钮居中， 实际按钮就是文字 */
    text-align: center;
}

.heading-primary-main {
    display: block;
    font-size: 6rem;
    /* Lato字体特定重量 100,300,400,700,900 */
    font-weight: 400;
    /* 字之间的间距 */
    letter-spacing: 3.5rem;

    animation-name: moveInLeft;
    /* 一秒内完成动画 */
    animation-duration: 1s;
    /* 延迟3秒后播放动画 */
    /* animation-delay: 3s; */
    /* 动画播放三遍 */
    /* animation-iteration-count: 3; */
    /* ease-out 开始快，结尾慢  ease-in 开始慢 结尾快 */
    animation-timing-function: ease-out;
}

.heading-primary-sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;

    animation: moveInRight 1s ease-out;

}

/* keyframes => 关键帧 */
@keyframes moveInLeft {
    /* 动画开始时 */
    0% {
        opacity: 0;
        /* 在x方向进行动画，从左到右 */
        transform: translateX(-10rem);
    }

    /* 一些疯狂的动画 */
    /* 60% { */
        /* 翻转120度 */
        /* transform: rotate(120deg); */
    /* } */

    /* 动画达到80%时 */
    80% {
        transform: translateX(1rem);
    }

    /* 动画结束时 */
    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInRight {
    /* 动画开始时 */
    0% {
        opacity: 0;
        /* 在x方向进行动画，从左到右 */
        transform: translateX(10rem);
    }

    /* 动画达到80%时 */
    80% {
        transform: translateX(-1rem);
    }

    /* 动画结束时 */
    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInBottom {
    /* 动画开始时 */
    /* 动画开始前的样式 会使得按钮的透明度为0 */
    0% {
        opacity: 0;
        transform: translateY(3rem);
    }

    /* 动画结束时 */
    100% {
        opacity: 1;
        transform: translate(0);
    }
}

.btn:link,
.btn:visited {
    text-transform:uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    /* 过度属性必须处于初始状态 */
    transition: all .2s;
    position: relative;
    /* 改成rem之后， 按钮中间的文字也会变小，因为根元素字体改成了10px 那么再改回16px就好了 */
    font-size: 1.6rem;
    }

/* 按钮悬停伪类 */
.btn:hover {
    transform: translateY(-.3rem);
    /* box-shadow: x y 模糊度 */
    box-shadow: 0 1rem 2rem rgba(0,0,0,.2);
}

/* 单击某个元素 让他处于状态 css */
.btn:active {
    transform: translateY(-0.1rem);
    box-shadow: 0 .5rem 1rem rgba(0,0,0,.2);
}

.btn-white {
    background-color: #fff;
    color: #777;
}

/* after 常被看作按钮的子集 */
.btn::after {
    content: '';
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    /* 0.4秒完成从初始状态到动画结束 */
    transition: all .4s;
}

.btn-white::after {
    /* 鼠标悬停之后的颜色 依然还是白色 可以修改颜色看看效果 */
    background-color: #fff;

}

.btn:hover::after {
    /* 在鼠标悬停时出现X轴被放大1.4倍，Y轴被放大1.6倍的btn盒子 */
    transform: scaleX(1.4) scaleY(1.6);
    /* 在鼠标悬停后的0.4秒内透明度变为0 */
    opacity: 0;
}

.btn-animated {
    /* 页面打开后动画延迟(delay)0.75s后执行 */
    animation: moveInBottom .5s ease-out .75s;
    /* 动画填充模式 */
    /* backwards 会自动适应 动画开始前的样式 最多为0 */
    animation-fill-mode: backwards;
}